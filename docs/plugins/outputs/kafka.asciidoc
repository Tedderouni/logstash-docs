[[plugins-outputs-kafka]]
=== kafka

* Version: 5.1.5
* Released on: January 25, 2017
* https://github.com/logstash-plugins/logstash-output-kafka/blob/master/CHANGELOG.md#515[Changelog]



==== Getting Help

For questions about the plugin, open a topic in the http://discuss.elastic.co[Discuss] forums. For bugs or feature requests, open an issue in https://github.com/elastic/logstash[Github].
For the list of Elastic supported plugins, please consult the https://www.elastic.co/support/matrix#show_logstash_plugins[Elastic Support Matrix].

==== Description

Write events to a Kafka topic.

This plugin uses Kafka Client 0.10.0.1. For broker compatibility, see the official https://cwiki.apache.org/confluence/display/KAFKA/Compatibility+Matrix[Kafka compatibility reference].

If you're using a plugin version that was released after {version}, see the https://www.elastic.co/guide/en/logstash/master/plugins-inputs-kafka.html[latest plugin documentation] for updated information about Kafka compatibility. If you require features not yet available in this plugin (including client version upgrades), please file an issue with details about what you need.

This output supports connecting to Kafka over:

* SSL (requires plugin version 3.0.0 or later)
* Kerberos SASL (requires plugin version 5.1.0 or later)

By default security is disabled but can be turned on as needed.

The only required configuration is the topic_id. The default codec is plain,
so events will be persisted on the broker in json format. If you select a codec of plain,
Logstash will encode your messages with not only the message but also with a timestamp and
hostname. If you do not want anything but your message passing through, you should make the output
configuration something like:
[source,ruby]
    output {
      kafka {
        codec => plain {
           format => "%{message}"
        }
        topic_id => "mytopic"
      }
    }
For more information see http://kafka.apache.org/documentation.html#theproducer

Kafka producer configuration: http://kafka.apache.org/documentation.html#newproducerconfigs

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
kafka {
    topic_id => ...
}
--------------------------



Available configuration options:

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-outputs-kafka-acks>> |<<string,string>>, one of `["0", "1", "all"]`|No
| <<plugins-outputs-kafka-batch_size>> |<<number,number>>|No
| <<plugins-outputs-kafka-bootstrap_servers>> |<<string,string>>|No
| <<plugins-outputs-kafka-buffer_memory>> |<<number,number>>|No
| <<plugins-outputs-kafka-client_id>> |<<string,string>>|No
| <<plugins-outputs-kafka-codec>> |<<codec,codec>>|No
| <<plugins-outputs-kafka-compression_type>> |<<string,string>>, one of `["none", "gzip", "snappy", "lz4"]`|No
| <<plugins-outputs-kafka-enable_metric>> |<<boolean,boolean>>|No
| <<plugins-outputs-kafka-id>> |<<string,string>>|No
| <<plugins-outputs-kafka-jaas_path>> |a valid filesystem path|No
| <<plugins-outputs-kafka-kerberos_config>> |a valid filesystem path|No
| <<plugins-outputs-kafka-key_serializer>> |<<string,string>>|No
| <<plugins-outputs-kafka-linger_ms>> |<<number,number>>|No
| <<plugins-outputs-kafka-max_request_size>> |<<number,number>>|No
| <<plugins-outputs-kafka-message_key>> |<<string,string>>|No
| <<plugins-outputs-kafka-metadata_fetch_timeout_ms>> |<<number,number>>|No
| <<plugins-outputs-kafka-metadata_max_age_ms>> |<<number,number>>|No
| <<plugins-outputs-kafka-receive_buffer_bytes>> |<<number,number>>|No
| <<plugins-outputs-kafka-reconnect_backoff_ms>> |<<number,number>>|No
| <<plugins-outputs-kafka-request_timeout_ms>> |<<string,string>>|No
| <<plugins-outputs-kafka-retries>> |<<number,number>>|No
| <<plugins-outputs-kafka-retry_backoff_ms>> |<<number,number>>|No
| <<plugins-outputs-kafka-sasl_kerberos_service_name>> |<<string,string>>|No
| <<plugins-outputs-kafka-sasl_mechanism>> |<<string,string>>|No
| <<plugins-outputs-kafka-security_protocol>> |<<string,string>>, one of `["PLAINTEXT", "SSL", "SASL_PLAINTEXT", "SASL_SSL"]`|No
| <<plugins-outputs-kafka-send_buffer_bytes>> |<<number,number>>|No
| <<plugins-outputs-kafka-ssl_key_password>> |<<password,password>>|No
| <<plugins-outputs-kafka-ssl_keystore_location>> |a valid filesystem path|No
| <<plugins-outputs-kafka-ssl_keystore_password>> |<<password,password>>|No
| <<plugins-outputs-kafka-ssl_keystore_type>> |<<string,string>>|No
| <<plugins-outputs-kafka-ssl_truststore_location>> |a valid filesystem path|No
| <<plugins-outputs-kafka-ssl_truststore_password>> |<<password,password>>|No
| <<plugins-outputs-kafka-ssl_truststore_type>> |<<string,string>>|No
| <<plugins-outputs-kafka-topic_id>> |<<string,string>>|Yes
| <<plugins-outputs-kafka-value_serializer>> |<<string,string>>|No
| <<plugins-outputs-kafka-workers>> |<<,>>|No
|=======================================================================


==== Details

&nbsp;

[[plugins-outputs-kafka-acks]]
===== `acks` 

  * Value can be any of: `0`, `1`, `all`
  * Default value is `"1"`

The number of acknowledgments the producer requires the leader to have received
before considering a request complete.

acks=0,   the producer will not wait for any acknowledgment from the server at all.
acks=1,   This will mean the leader will write the record to its local log but
          will respond without awaiting full acknowledgement from all followers.
acks=all, This means the leader will wait for the full set of in-sync replicas to acknowledge the record.

[[plugins-outputs-kafka-batch_size]]
===== `batch_size` 

  * Value type is <<number,number>>
  * Default value is `16384`

The producer will attempt to batch records together into fewer requests whenever multiple
records are being sent to the same partition. This helps performance on both the client
and the server. This configuration controls the default batch size in bytes.

[[plugins-outputs-kafka-block_on_buffer_full]]
===== `block_on_buffer_full`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `true`

When our memory buffer is exhausted we must either stop accepting new
records (block) or throw errors. By default this setting is true and we block,
however in some scenarios blocking is not desirable and it is better to immediately give an error.

[[plugins-outputs-kafka-bootstrap_servers]]
===== `bootstrap_servers` 

  * Value type is <<string,string>>
  * Default value is `"localhost:9092"`

This is for bootstrapping and the producer will only use it for getting metadata (topics,
partitions and replicas). The socket connections for sending the actual data will be
established based on the broker information returned in the metadata. The format is
`host1:port1,host2:port2`, and the list can be a subset of brokers or a VIP pointing to a
subset of brokers.

[[plugins-outputs-kafka-buffer_memory]]
===== `buffer_memory` 

  * Value type is <<number,number>>
  * Default value is `33554432`

The total bytes of memory the producer can use to buffer records waiting to be sent to the server.

[[plugins-outputs-kafka-client_id]]
===== `client_id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The id string to pass to the server when making requests.
The purpose of this is to be able to track the source of requests beyond just
ip/port by allowing a logical application name to be included with the request

[[plugins-outputs-kafka-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-kafka-compression_type]]
===== `compression_type` 

  * Value can be any of: `none`, `gzip`, `snappy`, `lz4`
  * Default value is `"none"`

The compression type for all data generated by the producer.
The default is none (i.e. no compression). Valid values are none, gzip, or snappy.

[[plugins-outputs-kafka-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-outputs-kafka-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin configuration. If no ID is specified, Logstash will generate one. 
It is strongly recommended to set this ID in your configuration. This is particularly useful 
when you have two or more plugins of the same type, for example, if you have 2 grok filters. 
Adding a named ID in this case will help in monitoring Logstash when using the monitoring APIs.

[source,ruby]
---------------------------------------------------------------------------------------------------
output {
 stdout {
   id => "my_plugin_id"
 }
}
---------------------------------------------------------------------------------------------------


[[plugins-outputs-kafka-jaas_path]]
===== `jaas_path` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

The Java Authentication and Authorization Service (JAAS) API supplies user authentication and authorization 
services for Kafka. This setting provides the path to the JAAS file. Sample JAAS file for Kafka client:
[source,java]
----------------------------------
KafkaClient {
  com.sun.security.auth.module.Krb5LoginModule required
  useTicketCache=true
  renewTicket=true
  serviceName="kafka";
  };
----------------------------------

Please note that specifying `jaas_path` and `kerberos_config` in the config file will add these 
to the global JVM system properties. This means if you have multiple Kafka inputs, all of them would be sharing the same 
`jaas_path` and `kerberos_config`. If this is not desirable, you would have to run separate instances of Logstash on 
different JVM instances.

[[plugins-outputs-kafka-kerberos_config]]
===== `kerberos_config` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

Optional path to kerberos config file. This is krb5.conf style as detailed in https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html

[[plugins-outputs-kafka-key_serializer]]
===== `key_serializer` 

  * Value type is <<string,string>>
  * Default value is `"org.apache.kafka.common.serialization.StringSerializer"`

Serializer class for the key of the message

[[plugins-outputs-kafka-linger_ms]]
===== `linger_ms` 

  * Value type is <<number,number>>
  * Default value is `0`

The producer groups together any records that arrive in between request
transmissions into a single batched request. Normally this occurs only under
load when records arrive faster than they can be sent out. However in some circumstances
the client may want to reduce the number of requests even under moderate load.
This setting accomplishes this by adding a small amount of artificial delay—that is,
rather than immediately sending out a record the producer will wait for up to the given delay
to allow other records to be sent so that the sends can be batched together.

[[plugins-outputs-kafka-max_request_size]]
===== `max_request_size` 

  * Value type is <<number,number>>
  * Default value is `1048576`

The maximum size of a request

[[plugins-outputs-kafka-message_key]]
===== `message_key` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The key for the message

[[plugins-outputs-kafka-metadata_fetch_timeout_ms]]
===== `metadata_fetch_timeout_ms` 

  * Value type is <<number,number>>
  * Default value is `60000`

the timeout setting for initial metadata request to fetch topic metadata.

[[plugins-outputs-kafka-metadata_max_age_ms]]
===== `metadata_max_age_ms` 

  * Value type is <<number,number>>
  * Default value is `300000`

the max time in milliseconds before a metadata refresh is forced.

[[plugins-outputs-kafka-receive_buffer_bytes]]
===== `receive_buffer_bytes` 

  * Value type is <<number,number>>
  * Default value is `32768`

The size of the TCP receive buffer to use when reading data

[[plugins-outputs-kafka-reconnect_backoff_ms]]
===== `reconnect_backoff_ms` 

  * Value type is <<number,number>>
  * Default value is `10`

The amount of time to wait before attempting to reconnect to a given host when a connection fails.

[[plugins-outputs-kafka-request_timeout_ms]]
===== `request_timeout_ms` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The configuration controls the maximum amount of time the client will wait
for the response of a request. If the response is not received before the timeout
elapses the client will resend the request if necessary or fail the request if
retries are exhausted.

[[plugins-outputs-kafka-retries]]
===== `retries` 

  * Value type is <<number,number>>
  * Default value is `0`

Setting a value greater than zero will cause the client to
resend any record whose send fails with a potentially transient error.

[[plugins-outputs-kafka-retry_backoff_ms]]
===== `retry_backoff_ms` 

  * Value type is <<number,number>>
  * Default value is `100`

The amount of time to wait before attempting to retry a failed produce request to a given topic partition.

[[plugins-outputs-kafka-sasl_kerberos_service_name]]
===== `sasl_kerberos_service_name` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The Kerberos principal name that Kafka broker runs as. 
This can be defined either in Kafka's JAAS config or in Kafka's config.

[[plugins-outputs-kafka-sasl_mechanism]]
===== `sasl_mechanism` 

  * Value type is <<string,string>>
  * Default value is `"GSSAPI"`

http://kafka.apache.org/documentation.html#security_sasl[SASL mechanism] used for client connections. 
This may be any mechanism for which a security provider is available.
GSSAPI is the default mechanism.

[[plugins-outputs-kafka-security_protocol]]
===== `security_protocol` 

  * Value can be any of: `PLAINTEXT`, `SSL`, `SASL_PLAINTEXT`, `SASL_SSL`
  * Default value is `"PLAINTEXT"`

Security protocol to use, which can be either of PLAINTEXT,SSL,SASL_PLAINTEXT,SASL_SSL

[[plugins-outputs-kafka-send_buffer_bytes]]
===== `send_buffer_bytes` 

  * Value type is <<number,number>>
  * Default value is `131072`

The size of the TCP send buffer to use when sending data.

[[plugins-outputs-kafka-ssl]]
===== `ssl`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable SSL/TLS secured communication to Kafka broker.

[[plugins-outputs-kafka-ssl_key_password]]
===== `ssl_key_password` 

  * Value type is <<password,password>>
  * There is no default value for this setting.

The password of the private key in the key store file.

[[plugins-outputs-kafka-ssl_keystore_location]]
===== `ssl_keystore_location` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

If client authentication is required, this setting stores the keystore path.

[[plugins-outputs-kafka-ssl_keystore_password]]
===== `ssl_keystore_password` 

  * Value type is <<password,password>>
  * There is no default value for this setting.

If client authentication is required, this setting stores the keystore password

[[plugins-outputs-kafka-ssl_keystore_type]]
===== `ssl_keystore_type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The keystore type.

[[plugins-outputs-kafka-ssl_truststore_location]]
===== `ssl_truststore_location` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

The JKS truststore path to validate the Kafka broker's certificate.

[[plugins-outputs-kafka-ssl_truststore_password]]
===== `ssl_truststore_password` 

  * Value type is <<password,password>>
  * There is no default value for this setting.

The truststore password

[[plugins-outputs-kafka-ssl_truststore_type]]
===== `ssl_truststore_type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The truststore type.

[[plugins-outputs-kafka-timeout_ms]]
===== `timeout_ms`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<number,number>>
  * Default value is `30000`

The configuration controls the maximum amount of time the server will wait for acknowledgments
from followers to meet the acknowledgment requirements the producer has specified with the
acks configuration. If the requested number of acknowledgments are not met when the timeout
elapses an error will be returned. This timeout is measured on the server side and does not
include the network latency of the request.

[[plugins-outputs-kafka-topic_id]]
===== `topic_id` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The topic to produce messages to

[[plugins-outputs-kafka-value_serializer]]
===== `value_serializer` 

  * Value type is <<string,string>>
  * Default value is `"org.apache.kafka.common.serialization.StringSerializer"`

Serializer class for the value of the message

[[plugins-outputs-kafka-workers]]
===== `workers` 

  * Value type is <<string,string>>
  * Default value is `1`

when we no longer support the :legacy type
This is hacky, but it can only be herne


